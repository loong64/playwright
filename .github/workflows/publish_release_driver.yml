name: "publish release - driver"

on:
  workflow_dispatch:
    inputs:
      version:
        default: 'latest'
        description: 'Package version'
        type: string
        required: true
  schedule:
    - cron: '0 16 * * *'

env:
  ELECTRON_SKIP_BINARY_DOWNLOAD: 1

jobs:
  check-driver-release:
    name: "check playwright driver"
    runs-on: ubuntu-latest
    outputs:
      create: ${{ steps.check-release.outputs.create }}
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Version
        id: get-version
        run: |
          if [ "${{ github.event_name }}" = "schedule" ] || [ "${{ github.event.inputs.version }}" = "latest" ]; then
            version=$(curl -s "https://api.github.com/repos/microsoft/playwright/releases/latest" | jq -r .tag_name)
          else
            version=${{ github.event.inputs.version }}
          fi
          if [ -z "${version}" ] || [ "${version}" == "null" ]; then
            echo "Failed to get version"
            exit 1
          fi
          
          echo "version=${version}" >> $GITHUB_ENV
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo ""
          echo "========== Build Args =========="
          echo "version=${version}"

      - name: Check Release
        id: check-release
        run: |
          gh release view ${version} -R ${{ github.repository }} >/dev/null 2>&1 || echo "create=1" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-driver-release:
    name: "publish playwright driver"
    runs-on: ubuntu-latest
    needs: check-driver-release
    if: needs.check-driver-release.outputs.create == '1'
    env:
      app_version: ${{ needs.check-driver-release.outputs.version }}
      node-version: 18
    steps:
    - uses: actions/checkout@v5
      with:
        repository: microsoft/playwright
        ref: ${{ env.app_version }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Playwright Driver
      run: |
        sed -i 's@https://nodejs.org/dist/@https://github.com/loong64/node/releases/download/@g' utils/build/build-playwright-driver.sh
        sed -i 's@build "node-@# build "node@g' utils/build/build-playwright-driver.sh
        sed -i 's@curl @curl -L @g' utils/build/build-playwright-driver.sh
        echo 'build "node-v${NODE_VERSION}-linux-loong64" "linux-loong64" "tar.gz"' >> utils/build/build-playwright-driver.sh
        docker run --rm \
          --platform linux/loong64 \
          --env ELECTRON_MIRROR="https://github.com/darkyzhou/electron-loong64/releases/download/" \
          --env electron_use_remote_checksums=1 \
          --volume $(pwd):/app \
          --workdir /app \
          ghcr.io/loong64/node:${{ env.node-version }} \
          /bin/bash -c "apt-get update && apt-get install -y git curl zip && npm install electron@37.2.5 && npm ci && npm run build && ./utils/build/build-playwright-driver.sh"
    
    - name: GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ env.app_version }}
        tag_name: ${{ env.app_version }}
        files: utils/build/output/playwright-*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}